/* 
Action fetchPhones

Так как у нас подключен в middleware redux-thunk, то мы можем писать асинхронные екшены.
И мы будем для этого использовать async await из es7.
*/

import {
  FETCH_PHONES_START,
  FETCH_PHONES_SUCCESS,
  FETCH_PHONES_FAILURE
} from "actionTypes";

// Импортируем fetchPhones, но с названием fetchPhonesApi
import { fetchPhones as fetchPhonesApi } from "api";

// Функция асинхронно диспачит action
export const fetchPhones = () => async dispatch => {
  // В action поле type - обязательное, остальные можно называть как хочешь
  // Но лучше писать type, payload (где будут данные) и error (true) если нужен-
  dispatch({ type: FETCH_PHONES_START });

  // Отслеживаем ошибку
  try {
    // Если ошибки нет, возвращаем Promise метода fetchPhonesApi()
    const phones = await fetchPhonesApi();
    dispatch({
        type: FETCH_PHONES_SUCCESS,
        payload: phones
      })
  } catch (err) {
          // Если ошибка, возвращаем FETCH_PHONES_FAILURE
    dispatch({
      type: FETCH_PHONES_FAILURE,
      payload: err,
      error: true
    });
  }
};
